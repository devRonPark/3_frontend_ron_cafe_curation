worker_processes auto;

events { worker_connections 1024; }

http {

  include mime.types;
  sendfile on;

  server {
    listen 80;
    server_name jjincafe-in-seoul.com;
    server_tokens off;

    location / {
      return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
  }

  server {
    listen 443 ssl;
    server_name jjincafe-in-seoul.com;
    server_tokens off;

    location {
      # 올바른 Preflight Request 인지 확인하기 위한 변수
      set $FLAG "";

      # Preflight Request인지 확인하기
      if ($request_method = OPTIONS) {
        set $FLAG "A";
      }

      # 허용된 Origin 인지 확인하기
      if ($http_origin ~* (https://jjincafe-in-seoul.com|https://www.jjincafe-in-seoul.com|http://localhost:3000)) {
        set $FLAG "${FLAG}B"
      }

      # 위의 조건들이 TRUE 면 요청 허용
      if ($FLAG = "AB") {
        add_header "Access-Controll-Allow-Origin" $http_origin; // 일부 origin 만 허용
        add_header "Access-Controll-Allow-Methods" "GET, POST, PATCH, DELETE, OPTIONS"; // 사용하는 METHOD 만 허용
        add_header "Access-Controll-Allow-Headers" "Set-Cookie"; // 사용하는 헤더만 허용
        add_header "Access-Controll-Max-Age" "3600"; // 캐싱 타임 설정
        return 204;
      }
    }

    location /api { # 이 부분은 api라는 uri로 통신 시 백엔드에 프록시 처리를 하기 위함
      proxy_pass         http://jjincafe_production:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
    }

    ssl_certificate /etc/letsencrypt/live/jjincafe-in-seoul.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jjincafe-in-seoul.com/privkey.pem;
  }

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}